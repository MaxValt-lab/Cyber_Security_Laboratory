name: DevSecOps Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: –ê—É–¥–∏—Ç: —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        run: python audit_writer.py "CI/CD: —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è"

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Run ruff and mypy
        run: |
          python audit_writer.py "CI/CD: –∑–∞–ø—É—Å–∫ –ª–∏–Ω—Ç–µ—Ä–æ–≤"
          ruff check .
          mypy common/src

  security:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Run bandit and safety
        run: |
          python audit_writer.py "CI/CD: –∑–∞–ø—É—Å–∫ —Å–∫–∞–Ω–µ—Ä–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
          bandit -r common/src
          safety check --full-report

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Run pytest
        run: |
          python audit_writer.py "CI/CD: –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"
          pytest --cov=common/src --cov-report=term-missing

  sbom:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Generate SBOM
        run: |
          python audit_writer.py "CI/CD: –≥–µ–Ω–µ—Ä–∞—Ü–∏—è SBOM"
          cyclonedx-py requirements -o sbom.json
      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json

  secrets:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Scan secrets with Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          config-path: .gitleaks.toml
      - name: –ê—É–¥–∏—Ç: –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∫—Ä–µ—Ç–æ–≤
        run: python audit_writer.py "CI/CD: –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∫—Ä–µ—Ç–æ–≤"

  docker:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: |
          python audit_writer.py "CI/CD: —Å–±–æ—Ä–∫–∞ Docker"
          docker build -f deployment/docker/Dockerfile -t cyberlab:latest .

  make:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Run full Makefile pipeline
        run: |
          python audit_writer.py "CI/CD: –∑–∞–ø—É—Å–∫ Makefile"
          make all

  release:
    runs-on: ubuntu-latest
    needs: make
    steps:
      - uses: actions/checkout@v4

      - name: üî¢ Bump version
        run: |
          python audit_writer.py "CI/CD: bump version"
          python tools/bump_version.py

      - name: üìú Generate changelog
        run: |
          python audit_writer.py "CI/CD: –≥–µ–Ω–µ—Ä–∞—Ü–∏—è CHANGELOG"
          git log --pretty=format:"- %s (%h)" $(git describe --tags --abbrev=0)..HEAD > CHANGELOG.md

      - name: üè∑ Create tag and push
        run: |
          python audit_writer.py "CI/CD: —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–≥–∞"
          git add VERSION CHANGELOG.md
          git commit -m "chore(release): bump version and changelog"
          git tag -a v$(cat VERSION) -m "Release v$(cat VERSION)"
          git push origin master --tags

      - name: –ê—É–¥–∏—Ç: —Ä–µ–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω
        run: python audit_writer.py "CI/CD: —Ä–µ–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω"