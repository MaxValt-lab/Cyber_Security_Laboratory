import hashlib
import sys

def hash_file(path):
    try:
        with open(path, "rb") as f:
            return hashlib.sha256(f.read()).hexdigest()
    except FileNotFoundError:
        print(f"[ERROR] –§–∞–π–ª {path} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        sys.exit(1)

def load_signature(path="code-signature.txt"):
    signatures = {}
    try:
        with open(path, "r") as f:
            for line in f:
                if ":" in line and not line.startswith("#"):
                    file, hash_val = line.strip().split(":")
                    signatures[file.strip()] = hash_val.strip()
    except FileNotFoundError:
        print("[ERROR] –§–∞–π–ª code-signature.txt –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        sys.exit(1)
    return signatures

def verify_files():
    signatures = load_signature()
    for file, expected_hash in signatures.items():
        actual_hash = hash_file(file)
        if actual_hash != expected_hash:
            print(f"[FAIL] –ù–∞—Ä—É—à–µ–Ω–∏–µ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏: {file}")
            print(f"–û–∂–∏–¥–∞–ª–æ—Å—å: {expected_hash}")
            print(f"–ü–æ–ª—É—á–µ–Ω–æ:  {actual_hash}")
            sys.exit(1)
        else:
            print(f"[OK] {file} ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞.")

if __name__ == "__main__":
    print("[üîê] –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏—Ü–µ–Ω–∑–∏–∏ –∏ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –ø–æ–¥–ø–∏—Å–µ–π...")
    verify_files()
    print("[‚úÖ] –í—Å–µ —Ñ–∞–π–ª—ã –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É.")