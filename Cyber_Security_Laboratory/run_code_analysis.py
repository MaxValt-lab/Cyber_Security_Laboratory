#!/usr/bin/env python3
"""
–ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–¥–∞
"""
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∞–≥–µ–Ω—Ç–∞–º
sys.path.append(str(Path(__file__).parent))

from agents.code_analyzer_agent import CodeAnalyzerAgent
from agents.security_scanner_agent import SecurityScannerAgent
from agents.auto_fixer_agent import AutoFixerAgent

def main():
    print("ü§ñ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–¥–∞")
    print("="*50)
    
    # 1. –ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞
    print("üìä –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞...")
    analyzer = CodeAnalyzerAgent()
    analyzer.scan_directory(Path.cwd())
    analyzer.save_report("code_analysis.json")
    
    print(f"   –§–∞–π–ª–æ–≤: {analyzer.stats['files_scanned']}")
    print(f"   –ü—Ä–æ–±–ª–µ–º: {analyzer.stats['issues_found']}")
    
    # 2. –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    print("\nüîí –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...")
    security = SecurityScannerAgent()
    security.scan_directory(Path.cwd())
    security.save_report("security_scan.json")
    
    report = security.generate_report()
    print(f"   –£—è–∑–≤–∏–º–æ—Å—Ç–µ–π: {report['total_vulnerabilities']}")
    print(f"   –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö: {report['severity_breakdown']['critical']}")
    
    # 3. –ê–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    print("\nüîß –ê–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ...")
    fixer = AutoFixerAgent()
    fixed = fixer.fix_directory(Path.cwd())
    
    print(f"   –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {fixed}")
    
    # –°–≤–æ–¥–∫–∞
    print("\n" + "="*50)
    print("‚úÖ –ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–ï–ù")
    print(f"üìÅ –û—Ç—á–µ—Ç—ã: code_analysis.json, security_scan.json")
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
    critical_issues = [i for i in analyzer.issues if i["severity"] == "HIGH"]
    critical_vulns = [v for v in security.vulnerabilities if v["severity"] == "CRITICAL"]
    
    if critical_issues or critical_vulns:
        print("\n‚ö†Ô∏è  –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´:")
        for issue in (critical_issues + critical_vulns)[:5]:
            print(f"   {issue['file']}:{issue['line']} - {issue.get('message', issue.get('description'))}")

if __name__ == "__main__":
    main()