# policy_enforcer.py

import json

THRESHOLD = 50  # –ü–æ—Ä–æ–≥ —Ä–∏—Å–∫–∞

def enforce_policy(risk_report_path="risk_report.json"):
    try:
        with open(risk_report_path, "r") as f:
            data = json.load(f)
    except Exception as e:
        print(f"[‚úò] –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –æ—Ç—á—ë—Ç–∞ —Ä–∏—Å–∫–∞: {e}")
        return

    for entry in data[-5:]:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–æ–±—ã—Ç–∏–π
        score = entry.get("risk_score", 0)
        message = entry["event"].get("message", "–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è")

        if score >= THRESHOLD:
            print(f"[üö®] –û–±–Ω–∞—Ä—É–∂–µ–Ω –≤—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫ ({score}): {message}")
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å:
            # - –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            # - –æ—Å—Ç–∞–Ω–æ–≤–∫—É CI/CD
            # - –∑–∞–ø–∏—Å—å –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –∂—É—Ä–Ω–∞–ª
        else:
            print(f"[‚úî] –†–∏—Å–∫ –¥–æ–ø—É—Å—Ç–∏–º ({score}): {message}")

if __name__ == "__main__":
    enforce_policy()